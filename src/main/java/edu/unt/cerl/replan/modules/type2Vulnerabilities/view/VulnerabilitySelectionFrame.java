/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VulnerabilitySelectionFrame.java
 *
 * Created on Feb 3, 2014, 3:12:00 PM
 */
package edu.unt.cerl.replan.modules.type2Vulnerabilities.view;

import edu.unt.cerl.replan.REPLAN;
import edu.unt.cerl.replan.modules.type2Vulnerabilities.model.ResourceAtPod;
import edu.unt.cerl.replan.modules.type2Vulnerabilities.model.Structures;
import edu.unt.cerl.replan.modules.type2Vulnerabilities.model.Type2TableModel;
import edu.unt.cerl.replan.modules.type2Vulnerabilities.model.VulnerabilityAtPod;
import edu.unt.cerl.replan.modules.type2Vulnerabilities.tools.AnalysisTools;
import edu.unt.cerl.replan.modules.type2Vulnerabilities.tools.DbTools;
import edu.unt.cerl.replan.modules.type2Vulnerabilities.tools.ResourceAllocationTools;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.io.File;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.ListSelectionModel;
import javax.swing.ScrollPaneConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableColumn;

/**
 *
 * @author sarat
 */
public class VulnerabilitySelectionFrame extends javax.swing.JFrame {

    JTextArea output;
    JList list;
    JTable table;
    ListSelectionModel listSelectionModel;
    Type2TableModel tabModel;

    /**
     * Creates new form VulnerabilitySelectionFrame
     */
    public VulnerabilitySelectionFrame() {
        initComponents();
        initCustomized();
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setTitle("Vulnerabilities");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Vulnerability");

        jButton2.setIcon(new javax.swing.ImageIcon("/Users/sarat/NetBeansProjects/REPLAN2/tick.png")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Spanish", "Other Indo-European", "Asian and Pacific Island", "Other" }));

        jButton1.setText("Analyze");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        label1.setText("Resource Management");

        button1.setLabel("Select File");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setLabel("Allocate");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/sarat/NetBeansProjects/REPLAN2/tick.png")); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon("/Users/sarat/NetBeansProjects/REPLAN2/settings.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
     *
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Analyze button
        int index = ((int) tabModel.getColumnCount() / 2) - 1;

        String selectedVuln = (String) jComboBox1.getSelectedItem();
        DbTools.getInstance().setSceanrio(REPLAN.getMainFrame().getTabs().getSelectedScenario());
        AnalysisTools analysisTools = new AnalysisTools();
        analysisTools.analyzeVulnerability(index, selectedVuln);
        DecimalFormat df = new DecimalFormat("#.#");
        HashMap<Integer, VulnerabilityAtPod> vulnByPod = Structures.getInstance().getVulnAtPodList(index);
        HashMap<Integer, ResourceAtPod> resNeedByPod = Structures.getInstance().getResourceNeedAtPodList(index);
        Iterator<Integer> it = vulnByPod.keySet().iterator();
        if (tabModel.getRowCount() > 0) {
            while (it.hasNext()) {
                int pod = it.next();
                ResourceAtPod need = resNeedByPod.get(pod);
                VulnerabilityAtPod vuln = vulnByPod.get(pod);
                String res = Double.toString(Double.valueOf(df.format(need.getQuantity())));
                tabModel.setValueAt(res, pod - 1, (index + 1) * 2);
                String vulQ = Integer.toString(vuln.getVuln());
                tabModel.setValueAt(vulQ, pod - 1, ((index + 1) * 2) - 1);
            }
        } else {
            while (it.hasNext()) {
                int pod = it.next();
                VulnerabilityAtPod vuln = vulnByPod.get(pod);
                ResourceAtPod need = resNeedByPod.get(pod);
                ArrayList<String> row = new ArrayList<String>();
                row.add(Integer.toString(pod));
                row.add(Integer.toString(vuln.getVuln()));
                row.add(Double.toString(Double.valueOf(df.format(need.getQuantity()))));
                tabModel.addRow(row);
            }
        }

//        Iterator<Integer> it1 = resNeedByPod.keySet().iterator();
//        while (it1.hasNext()) {
//            int pod = it1.next();
//            ResourceAtPod need = resNeedByPod.get(pod);
//            String res = Double.toString(need.getQuantity());
//            tabModel.setValueAt(res, pod, (index + 1) * 2);
//        }
        //this.setVisible(false);
        this.repaint();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Select Button
        if (tabModel.getRowCount() > 0) {
            tabModel.updateRowStructure(2);
        }
        String selectedVuln = (String) jComboBox1.getSelectedItem();
        TableColumn vuln = new TableColumn(table.getModel().getColumnCount());
        vuln.setHeaderValue(selectedVuln);
        table.addColumn(vuln);
        tabModel.addColumn(selectedVuln);
        table.setModel(tabModel);
        TableColumn res = new TableColumn(table.getModel().getColumnCount());
        res.setHeaderValue("Translators");
        table.addColumn(res);
        tabModel.addColumn("Translators");
        table.setModel(tabModel);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // Select File Button
        final JFileChooser fc = new JFileChooser();

        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            //System.out.println("Selected File: "+file.getName());
            ResMngmtTempLang.getInstance().setFile(file);

            button2.setEnabled(true);
            jLabel2.setVisible(true);
            this.repaint();
        } else {
            //log.append("Open command cancelled by user." + newline);
        }
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // Allocate Button
        int index = ((int) tabModel.getColumnCount() / 2) - 1;
        (new ResourceAllocationTools()).analyzeAllocation(index);

        DecimalFormat df = new DecimalFormat("#.#");

        HashMap<Integer, ResourceAtPod> resAllocByPod = Structures.getInstance().getResourceAllocAtPodList(index);
        HashMap<Integer, ResourceAtPod> resNeedByPod = Structures.getInstance().getResourceNeedAtPodList(index);
        HashMap<Integer, ResourceAtPod> resAvailByPod = Structures.getInstance().getResourceAvailAtPodList(index);
        HashMap<Integer, VulnerabilityAtPod> vulnByPod = Structures.getInstance().getVulnAtPodList(index);
        Iterator<Integer> it = resAllocByPod.keySet().iterator();
        while (it.hasNext()) {
            int pod = it.next();
            ResourceAtPod alloc = resAllocByPod.get(pod);
            ResourceAtPod need = resNeedByPod.get(pod);
            ResourceAtPod avail = resAvailByPod.get(pod);
            VulnerabilityAtPod vuln = vulnByPod.get(pod);
            String res = Double.toString(Double.valueOf(df.format(need.getQuantity()))) + "-" + Double.toString(Double.valueOf(df.format(avail.getQuantity()))) + "-" + Double.toString(Double.valueOf(df.format(alloc.getQuantity())));
            tabModel.setValueAt(res, pod - 1, (index + 1) * 2);
            String vulQ = Integer.toString(vuln.getVuln());
            tabModel.setValueAt(vulQ, pod - 1, ((index + 1) * 2) - 1);
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void initCustomized() {
        jButton2.setIcon(new ImageIcon("tick.png"));
        
        button2.setEnabled(false);
        jLabel2.setVisible(false);
        jPanel2.setLayout(new GridLayout(1, 1));
        jPanel2.setPreferredSize(new Dimension(600, 220));

//        String[] columnNames = {"POD", "Vuln: Language-Spanish", "Trasnaltors"};
//        Object[][] data = {
//            {1, 1000, 45},
//            {2, 1022, 33}
//        };
        //table = new JTable(data, columnNames);
        table = new JTable();
        tabModel = new Type2TableModel();
        table.setModel(tabModel);
        TableColumn vuln = new TableColumn(table.getModel().getColumnCount());
        vuln.setHeaderValue("POD");
        table.addColumn(vuln);
        tabModel.addColumn("POD");
        table.setModel(tabModel);

        listSelectionModel = table.getSelectionModel();
        listSelectionModel.addListSelectionListener(new SharedListSelectionHandler());
        table.setSelectionModel(listSelectionModel);
        JScrollPane tablePane = new JScrollPane(table);

        output = new JTextArea();
        //output.setText("Barely Working");
        output.setEditable(false);
        JScrollPane outputPane = new JScrollPane(output,
                ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS,
                ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        outputPane.setPreferredSize(new Dimension(575, 50));

        //Do the layout.
        JSplitPane splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
        splitPane.setLayout(new BoxLayout(splitPane, BoxLayout.Y_AXIS));
        //jPanel2.add(splitPane);

        JPanel topHalf = new JPanel();
        topHalf.setLayout(new BoxLayout(topHalf, BoxLayout.LINE_AXIS));
        //JPanel listContainer = new JPanel(new GridLayout(1, 1));
        JPanel tableContainer = new JPanel(new GridLayout(1, 1));
        tableContainer.setBorder(BorderFactory.createTitledBorder(
                "Analysis"));
        tableContainer.add(tablePane);
        tablePane.setPreferredSize(new Dimension(575, 150));
        //topHalf.setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));
        //topHalf.add(listContainer);
        topHalf.add(tableContainer);

        topHalf.setMinimumSize(new Dimension(250, 100));
        topHalf.setPreferredSize(new Dimension(575, 170));
        splitPane.add(topHalf);

        JPanel bottomHalf = new JPanel(new BorderLayout());
        bottomHalf.add(outputPane, BorderLayout.PAGE_START);
        bottomHalf.setPreferredSize(new Dimension(575, 60));
        splitPane.add(bottomHalf);
        jPanel2.add(splitPane);
        jPanel2.setVisible(true);
    }

    class SharedListSelectionHandler implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            ListSelectionModel lsm = (ListSelectionModel) e.getSource();

            int firstIndex = e.getFirstIndex();
            int lastIndex = e.getLastIndex();
            boolean isAdjusting = e.getValueIsAdjusting();
//            output.append("Event for indexes "
//                    + firstIndex + " - " + lastIndex
//                    + "; isAdjusting is " + isAdjusting
//                    + "; selected indexes:");

            if (lsm.isSelectionEmpty()) {
                output.append(" <none>");
            } else {
                // Find out which indexes are selected.
                int minIndex = lsm.getMinSelectionIndex();
                int maxIndex = lsm.getMaxSelectionIndex();
                for (int i = minIndex; i <= maxIndex; i++) {
                    if (lsm.isSelectedIndex(i)) {
                        //output.append(" " + i);
                        //output.setText("Catchment Area: " + table.getModel().getValueAt(i, ((int) tabModel.getColumnCount() / 2) - 1) + "\n"); 
                        int ca = Integer.parseInt((String)table.getModel().getValueAt(i,0));
                        output.setText("Catchment Area: " + ca + "\n"); 
                        int numVulns = (int) (tabModel.getColumnCount() / 2); 
                        for(int j =0; j<numVulns; j++) {
                            output.append("Vulnearbility "+j+":\n");
                            output.append("\tReamining Vulnerability: "+Structures.getInstance().getVulnAtPodList(j).get(ca).getVuln()+"\n");
                            output.append("\tResource Need: "+Structures.getInstance().getResourceNeedAtPodList(j).get(ca).getQuantity()+"\n");
                            output.append("\tAvailability: "+Structures.getInstance().getResourceAvailAtPodList(j).get(ca).getQuantity()+"\n");
                            output.append("\tAllocation: "+Structures.getInstance().getResourceAllocAtPodList(j).get(ca).getQuantity()+"\n");
                        }
                        //output.append("Resource Need-Availability-Allocation: " + table.getModel().getValueAt(i, tabModel.getColumnCount()- 1) + "\n\n");

                    }
                }
            }
            //output.append("\n");
            output.setCaretPosition(output.getDocument().getLength());
            output.setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VulnerabilitySelectionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables

}
